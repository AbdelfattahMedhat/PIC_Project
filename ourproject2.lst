;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 27/12/2023 01:40:25 Õ
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2881      	GOTO       129
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00AB      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00AC      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A1      	MOVWF      33
0x000D	0x087C      	MOVF       R12, 0
0x000E	0x00A0      	MOVWF      32
;ourproject2.c,46 :: 		void interrupt()
;ourproject2.c,50 :: 		if (TMR0IF_bit == 1)
0x000F	0x1D0B      	BTFSS      TMR0IF_bit, BitPos(TMR0IF_bit+0)
0x0010	0x282D      	GOTO       L_interrupt0
;ourproject2.c,52 :: 		TMR0=TIMER0_OVF_VALUE(195); // number of tick for ovf interrupt
0x0011	0x303C      	MOVLW      60
0x0012	0x0081      	MOVWF      TMR0
;ourproject2.c,53 :: 		if (++timer0_int_counter == TIMER0_PER_SEC)
0x0013	0x0AA5      	INCF       _timer0_int_counter, 1
0x0014	0x0825      	MOVF       _timer0_int_counter, 0
0x0015	0x3A28      	XORLW      40
0x0016	0x1D03      	BTFSS      STATUS, 2
0x0017	0x282C      	GOTO       L_interrupt1
;ourproject2.c,55 :: 		if(belt_flag == BELT_STOP )
0x0018	0x0824      	MOVF       _belt_flag, 0
0x0019	0x3A00      	XORLW      0
0x001A	0x1D03      	BTFSS      STATUS, 2
0x001B	0x2822      	GOTO       L_interrupt2
;ourproject2.c,57 :: 		BELT_MOTOR_PIN       = LOGIC_LOW;
0x001C	0x1087      	BCF        PORTC, 1
;ourproject2.c,58 :: 		ARM_MOTOR_PIN        = LOGIC_HIGH;
0x001D	0x1686      	BSF        PORTB, 5
;ourproject2.c,59 :: 		LED_BELT_STATE_PIN   = LOGIC_LOW  ;
0x001E	0x1007      	BCF        PORTC, 0
;ourproject2.c,60 :: 		belt_flag            = BELT_RUN;
0x001F	0x3001      	MOVLW      1
0x0020	0x00A4      	MOVWF      _belt_flag
;ourproject2.c,61 :: 		}
0x0021	0x2829      	GOTO       L_interrupt3
L_interrupt2:
;ourproject2.c,62 :: 		else if(belt_flag == BELT_RUN )
0x0022	0x0824      	MOVF       _belt_flag, 0
0x0023	0x3A01      	XORLW      1
0x0024	0x1D03      	BTFSS      STATUS, 2
0x0025	0x2829      	GOTO       L_interrupt4
;ourproject2.c,64 :: 		BELT_MOTOR_PIN       = LOGIC_HIGH;
0x0026	0x1487      	BSF        PORTC, 1
;ourproject2.c,65 :: 		ARM_MOTOR_PIN        = LOGIC_LOW;
0x0027	0x1286      	BCF        PORTB, 5
;ourproject2.c,66 :: 		LED_BELT_STATE_PIN   = LOGIC_HIGH;
0x0028	0x1407      	BSF        PORTC, 0
;ourproject2.c,67 :: 		}
L_interrupt4:
L_interrupt3:
;ourproject2.c,69 :: 		LED_INDECATOR_PIN    =LED_INDECATOR_PIN^LOGIC_HIGH;
0x0029	0x3002      	MOVLW      2
0x002A	0x0686      	XORWF      PORTB, 1
;ourproject2.c,70 :: 		timer0_int_counter   = 0;
0x002B	0x01A5      	CLRF       _timer0_int_counter
;ourproject2.c,72 :: 		}
L_interrupt1:
;ourproject2.c,73 :: 		TMR0IF_bit=0;
0x002C	0x110B      	BCF        TMR0IF_bit, BitPos(TMR0IF_bit+0)
;ourproject2.c,74 :: 		}
L_interrupt0:
;ourproject2.c,76 :: 		if (intf_bit==1 )     // high when set ground on ex_int
0x002D	0x1C8B      	BTFSS      INTF_bit, BitPos(INTF_bit+0)
0x002E	0x2852      	GOTO       L_interrupt5
;ourproject2.c,78 :: 		ball_counter++;
0x002F	0x0A26      	INCF       _ball_counter, 0
0x0030	0x00F0      	MOVWF      R0
0x0031	0x0870      	MOVF       R0, 0
0x0032	0x00A6      	MOVWF      _ball_counter
;ourproject2.c,79 :: 		digit1=ball_counter % 10;
0x0033	0x300A      	MOVLW      10
0x0034	0x00F4      	MOVWF      R4
0x0035	0x0826      	MOVF       _ball_counter, 0
0x0036	0x00F0      	MOVWF      R0
0x0037	0x2070      	CALL       _Div_8X8_U
0x0038	0x0878      	MOVF       R8, 0
0x0039	0x00F0      	MOVWF      R0
0x003A	0x0870      	MOVF       R0, 0
0x003B	0x00A8      	MOVWF      _digit1
;ourproject2.c,80 :: 		digit2=ball_counter/10;
0x003C	0x300A      	MOVLW      10
0x003D	0x00F4      	MOVWF      R4
0x003E	0x0826      	MOVF       _ball_counter, 0
0x003F	0x00F0      	MOVWF      R0
0x0040	0x2070      	CALL       _Div_8X8_U
0x0041	0x0870      	MOVF       R0, 0
0x0042	0x00A7      	MOVWF      _digit2
;ourproject2.c,81 :: 		if(ball_counter >= BALL_MAX_NUM)
0x0043	0x3014      	MOVLW      20
0x0044	0x0226      	SUBWF      _ball_counter, 0
0x0045	0x1C03      	BTFSS      STATUS, 0
0x0046	0x2851      	GOTO       L_interrupt6
;ourproject2.c,83 :: 		ball_counter = 0;
0x0047	0x01A6      	CLRF       _ball_counter
;ourproject2.c,84 :: 		box++;
0x0048	0x0A22      	INCF       _box, 0
0x0049	0x00F0      	MOVWF      R0
0x004A	0x0870      	MOVF       R0, 0
0x004B	0x00A2      	MOVWF      _box
;ourproject2.c,85 :: 		if(box >= BOX_MAX_NUM)
0x004C	0x3003      	MOVLW      3
0x004D	0x0222      	SUBWF      _box, 0
0x004E	0x1C03      	BTFSS      STATUS, 0
0x004F	0x2851      	GOTO       L_interrupt7
;ourproject2.c,87 :: 		box = 0;
0x0050	0x01A2      	CLRF       _box
;ourproject2.c,88 :: 		}
L_interrupt7:
;ourproject2.c,89 :: 		}
L_interrupt6:
;ourproject2.c,90 :: 		intf_bit=0;
0x0051	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;ourproject2.c,91 :: 		}
L_interrupt5:
;ourproject2.c,94 :: 		}
L_end_interrupt:
L__interrupt22:
0x0052	0x0821      	MOVF       33, 0
0x0053	0x00F0      	MOVWF      R0
0x0054	0x0820      	MOVF       32, 0
0x0055	0x00FC      	MOVWF      R12
0x0056	0x082C      	MOVF       ___savePCLATH, 0
0x0057	0x008A      	MOVWF      PCLATH
0x0058	0x0E2B      	SWAPF      ___saveSTATUS, 0
0x0059	0x0083      	MOVWF      STATUS
0x005A	0x0EFF      	SWAPF      R15, 1
0x005B	0x0E7F      	SWAPF      R15, 0
0x005C	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x005D	0x1283      	BCF        STATUS, 5
0x005E	0x1303      	BCF        STATUS, 6
0x005F	0x082A      	MOVF       ___DoICPAddr+1, 0
0x0060	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0061	0x0829      	MOVF       ___DoICPAddr, 0
0x0062	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0063	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0064	0x205D      	CALL       _____DoICP
0x0065	0x118A      	BCF        PCLATH, 3
0x0066	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0067	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0068	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0069	0x0AA9      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x006A	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x006B	0x0AAA      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x006C	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x006D	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x006E	0x2864      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x006F	0x0008      	RETURN
; end of ___CC2DW
_Div_8X8_U:
;__Lib_Math.c,189 :: 		
;__Lib_Math.c,196 :: 		
0x0070	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,197 :: 		
0x0071	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,198 :: 		
0x0072	0x01F8      	CLRF       R8
;__Lib_Math.c,199 :: 		
0x0073	0x3008      	MOVLW      8
;__Lib_Math.c,200 :: 		
0x0074	0x00FC      	MOVWF      R12
;__Lib_Math.c,201 :: 		
0x0075	0x0D70      	RLF        R0, 0
;__Lib_Math.c,202 :: 		
0x0076	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,203 :: 		
0x0077	0x0874      	MOVF       R4, 0
;__Lib_Math.c,204 :: 		
0x0078	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,205 :: 		
0x0079	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,206 :: 		
0x007A	0x287D      	GOTO       $+3
;__Lib_Math.c,207 :: 		
0x007B	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,208 :: 		
0x007C	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,209 :: 		
0x007D	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,210 :: 		
0x007E	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,211 :: 		
0x007F	0x2875      	GOTO       $-10
;__Lib_Math.c,213 :: 		
L_end_Div_8X8_U:
0x0080	0x0008      	RETURN
; end of _Div_8X8_U
_main:
0x0081	0x1283      	BCF        STATUS, 5
0x0082	0x1303      	BCF        STATUS, 6
0x0083	0x01A2      	CLRF       _box
0x0084	0x01A3      	CLRF       _SSD_select_counter
0x0085	0x3001      	MOVLW      1
0x0086	0x00A4      	MOVWF      _belt_flag
0x0087	0x01A5      	CLRF       _timer0_int_counter
0x0088	0x01A6      	CLRF       _ball_counter
0x0089	0x01A7      	CLRF       _digit2
0x008A	0x01A8      	CLRF       _digit1
;ourproject2.c,96 :: 		void main()
;ourproject2.c,100 :: 		trisb             =0b00000101;                              // init REG B with bin (0,2) inputs and remain are output
0x008B	0x3005      	MOVLW      5
0x008C	0x1683      	BSF        STATUS, 5
0x008D	0x0086      	MOVWF      TRISB
;ourproject2.c,102 :: 		trisd             =0;                              // init REG D all output
0x008E	0x0188      	CLRF       TRISD
;ourproject2.c,103 :: 		portd             =0;                              // init REG D all Low
0x008F	0x1283      	BCF        STATUS, 5
0x0090	0x0188      	CLRF       PORTD
;ourproject2.c,105 :: 		trisc             = 0;                             // init REG D all output & init input pin 5 of IR sensor
0x0091	0x1683      	BSF        STATUS, 5
0x0092	0x0187      	CLRF       TRISC
;ourproject2.c,107 :: 		option_reg        = 0b00000111;                    //set timer0 prescaler as 256
0x0093	0x3007      	MOVLW      7
0x0094	0x0081      	MOVWF      OPTION_REG
;ourproject2.c,108 :: 		TMR0              =TIMER0_OVF_VALUE(195);          // timer init with ovf int after 195 tick
0x0095	0x303C      	MOVLW      60
0x0096	0x1283      	BCF        STATUS, 5
0x0097	0x0081      	MOVWF      TMR0
;ourproject2.c,110 :: 		intcon            = 0b11110000;                    // Enable interrupts
0x0098	0x30F0      	MOVLW      240
0x0099	0x008B      	MOVWF      INTCON
;ourproject2.c,112 :: 		while (1)
L_main8:
;ourproject2.c,115 :: 		while(box <= BOX_MAX_NUM)
L_main10:
0x009A	0x0822      	MOVF       _box, 0
0x009B	0x3C03      	SUBLW      3
0x009C	0x1C03      	BTFSS      STATUS, 0
0x009D	0x2906      	GOTO       L_main11
;ourproject2.c,117 :: 		SSD_select_counter++;
0x009E	0x0AA3      	INCF       _SSD_select_counter, 1
;ourproject2.c,118 :: 		if (SSD_select_counter      == SSD_DIGIT_BALL_1 )  // done
0x009F	0x0823      	MOVF       _SSD_select_counter, 0
0x00A0	0x3A00      	XORLW      0
0x00A1	0x1D03      	BTFSS      STATUS, 2
0x00A2	0x28C0      	GOTO       L_main12
;ourproject2.c,120 :: 		SSD_BOX_PIN    =LOGIC_LOW;
0x00A3	0x1306      	BCF        PORTB, 6
;ourproject2.c,121 :: 		portd          =seg[digit1];
0x00A4	0x0828      	MOVF       _digit1, 0
0x00A5	0x3E08      	ADDLW      _seg
0x00A6	0x00F0      	MOVWF      R0
0x00A7	0x3001      	MOVLW      hi_addr(_seg)
0x00A8	0x1803      	BTFSC      STATUS, 0
0x00A9	0x3E01      	ADDLW      1
0x00AA	0x00F1      	MOVWF      R0+1
0x00AB	0x0870      	MOVF       R0, 0
0x00AC	0x00A9      	MOVWF      ___DoICPAddr
0x00AD	0x0871      	MOVF       R0+1, 0
0x00AE	0x00AA      	MOVWF      ___DoICPAddr+1
0x00AF	0x205D      	CALL       _____DoICP
0x00B0	0x118A      	BCF        PCLATH, 3
0x00B1	0x120A      	BCF        PCLATH, 4
0x00B2	0x0088      	MOVWF      PORTD
;ourproject2.c,122 :: 		SSD_DIGIT1_PIN =LOGIC_HIGH;
0x00B3	0x1586      	BSF        PORTB, 3
;ourproject2.c,123 :: 		SSD_DIGIT2_PIN =LOGIC_LOW;
0x00B4	0x1206      	BCF        PORTB, 4
;ourproject2.c,124 :: 		delay_ms(5);
0x00B5	0x300D      	MOVLW      13
0x00B6	0x00FC      	MOVWF      R12
0x00B7	0x30FB      	MOVLW      251
0x00B8	0x00FD      	MOVWF      R13
L_main13:
0x00B9	0x0BFD      	DECFSZ     R13, 1
0x00BA	0x28B9      	GOTO       L_main13
0x00BB	0x0BFC      	DECFSZ     R12, 1
0x00BC	0x28B9      	GOTO       L_main13
0x00BD	0x0000      	NOP
0x00BE	0x0000      	NOP
;ourproject2.c,125 :: 		}
0x00BF	0x2902      	GOTO       L_main14
L_main12:
;ourproject2.c,126 :: 		else if(SSD_select_counter  == SSD_DIGIT_BALL_2 ) // done
0x00C0	0x0823      	MOVF       _SSD_select_counter, 0
0x00C1	0x3A01      	XORLW      1
0x00C2	0x1D03      	BTFSS      STATUS, 2
0x00C3	0x28E1      	GOTO       L_main15
;ourproject2.c,129 :: 		SSD_DIGIT1_PIN =LOGIC_LOW;
0x00C4	0x1186      	BCF        PORTB, 3
;ourproject2.c,130 :: 		portd          =seg[digit2];
0x00C5	0x0827      	MOVF       _digit2, 0
0x00C6	0x3E08      	ADDLW      _seg
0x00C7	0x00F0      	MOVWF      R0
0x00C8	0x3001      	MOVLW      hi_addr(_seg)
0x00C9	0x1803      	BTFSC      STATUS, 0
0x00CA	0x3E01      	ADDLW      1
0x00CB	0x00F1      	MOVWF      R0+1
0x00CC	0x0870      	MOVF       R0, 0
0x00CD	0x00A9      	MOVWF      ___DoICPAddr
0x00CE	0x0871      	MOVF       R0+1, 0
0x00CF	0x00AA      	MOVWF      ___DoICPAddr+1
0x00D0	0x205D      	CALL       _____DoICP
0x00D1	0x118A      	BCF        PCLATH, 3
0x00D2	0x120A      	BCF        PCLATH, 4
0x00D3	0x0088      	MOVWF      PORTD
;ourproject2.c,131 :: 		SSD_DIGIT2_PIN =LOGIC_HIGH;
0x00D4	0x1606      	BSF        PORTB, 4
;ourproject2.c,132 :: 		SSD_BOX_PIN    =LOGIC_LOW;
0x00D5	0x1306      	BCF        PORTB, 6
;ourproject2.c,133 :: 		delay_ms(5);
0x00D6	0x300D      	MOVLW      13
0x00D7	0x00FC      	MOVWF      R12
0x00D8	0x30FB      	MOVLW      251
0x00D9	0x00FD      	MOVWF      R13
L_main16:
0x00DA	0x0BFD      	DECFSZ     R13, 1
0x00DB	0x28DA      	GOTO       L_main16
0x00DC	0x0BFC      	DECFSZ     R12, 1
0x00DD	0x28DA      	GOTO       L_main16
0x00DE	0x0000      	NOP
0x00DF	0x0000      	NOP
;ourproject2.c,134 :: 		}
0x00E0	0x2902      	GOTO       L_main17
L_main15:
;ourproject2.c,135 :: 		else if(SSD_select_counter  == SSD_DIGIT_BOXS ) // done
0x00E1	0x0823      	MOVF       _SSD_select_counter, 0
0x00E2	0x3A02      	XORLW      2
0x00E3	0x1D03      	BTFSS      STATUS, 2
0x00E4	0x2902      	GOTO       L_main18
;ourproject2.c,138 :: 		SSD_DIGIT1_PIN    =LOGIC_LOW;
0x00E5	0x1186      	BCF        PORTB, 3
;ourproject2.c,139 :: 		SSD_DIGIT2_PIN     =LOGIC_LOW;
0x00E6	0x1206      	BCF        PORTB, 4
;ourproject2.c,140 :: 		portd		          =seg[box];
0x00E7	0x0822      	MOVF       _box, 0
0x00E8	0x3E08      	ADDLW      _seg
0x00E9	0x00F0      	MOVWF      R0
0x00EA	0x3001      	MOVLW      hi_addr(_seg)
0x00EB	0x1803      	BTFSC      STATUS, 0
0x00EC	0x3E01      	ADDLW      1
0x00ED	0x00F1      	MOVWF      R0+1
0x00EE	0x0870      	MOVF       R0, 0
0x00EF	0x00A9      	MOVWF      ___DoICPAddr
0x00F0	0x0871      	MOVF       R0+1, 0
0x00F1	0x00AA      	MOVWF      ___DoICPAddr+1
0x00F2	0x205D      	CALL       _____DoICP
0x00F3	0x118A      	BCF        PCLATH, 3
0x00F4	0x120A      	BCF        PCLATH, 4
0x00F5	0x0088      	MOVWF      PORTD
;ourproject2.c,141 :: 		SSD_BOX_PIN        =LOGIC_HIGH;
0x00F6	0x1706      	BSF        PORTB, 6
;ourproject2.c,142 :: 		delay_ms(5);
0x00F7	0x300D      	MOVLW      13
0x00F8	0x00FC      	MOVWF      R12
0x00F9	0x30FB      	MOVLW      251
0x00FA	0x00FD      	MOVWF      R13
L_main19:
0x00FB	0x0BFD      	DECFSZ     R13, 1
0x00FC	0x28FB      	GOTO       L_main19
0x00FD	0x0BFC      	DECFSZ     R12, 1
0x00FE	0x28FB      	GOTO       L_main19
0x00FF	0x0000      	NOP
0x0100	0x0000      	NOP
;ourproject2.c,143 :: 		SSD_select_counter = SSD_DIGIT_BALL_1;
0x0101	0x01A3      	CLRF       _SSD_select_counter
;ourproject2.c,144 :: 		}
L_main18:
L_main17:
L_main14:
;ourproject2.c,145 :: 		if (ARM_MOTOR_START_PIN == PRESSED)
0x0102	0x1906      	BTFSC      PORTB, 2
0x0103	0x2905      	GOTO       L_main20
;ourproject2.c,147 :: 		belt_flag       = BELT_STOP;
0x0104	0x01A4      	CLRF       _belt_flag
;ourproject2.c,148 :: 		}
L_main20:
;ourproject2.c,149 :: 		}
0x0105	0x289A      	GOTO       L_main10
L_main11:
;ourproject2.c,151 :: 		}
0x0106	0x289A      	GOTO       L_main8
;ourproject2.c,152 :: 		}
L_end_main:
0x0107	0x2907      	GOTO       $+0
; end of _main
;ourproject2.c,36 :: _seg
0x0108	0x343F ;_seg+0
0x0109	0x3406 ;_seg+1
0x010A	0x345B ;_seg+2
0x010B	0x344F ;_seg+3
0x010C	0x3466 ;_seg+4
0x010D	0x346D ;_seg+5
0x010E	0x347C ;_seg+6
0x010F	0x3407 ;_seg+7
0x0110	0x347F ;_seg+8
0x0111	0x3467 ;_seg+9
; end of _seg
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [89]    _interrupt
0x005D       [7]    _____DoICP
0x0064      [12]    ___CC2DW
0x0070      [17]    _Div_8X8_U
0x0081     [135]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [0]    INTF_bit
0x000B       [1]    INTCON
0x000B       [0]    TMR0IF_bit
0x0022       [1]    _box
0x0023       [1]    _SSD_select_counter
0x0024       [1]    _belt_flag
0x0025       [1]    _timer0_int_counter
0x0026       [1]    _ball_counter
0x0027       [1]    _digit2
0x0028       [1]    _digit1
0x0029       [2]    ___DoICPAddr
0x002B       [1]    ___saveSTATUS
0x002C       [1]    ___savePCLATH
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0108      [10]    _seg
